<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="lazqBitTorrentWebUI">
    <!--
         ====================================================================
         qBTorrents
         ====================================================================
    -->
    <module name="qBTorrents">
      <short>Unit containing a container for torrents.</short>
      <descr>
        <p>This unit contains a set of objects to suport the torrents data aquired from the API.</p>
      </descr>
      <!-- enumeration type Visibility: default -->
      <element name="TqBTorrentState">
        <short>Torrent States.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsError">
        <short>Some error occurred, applies to paused torrents.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsPausedUp">
        <short>Torrent is paused and has finished downloading.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsPausedDl">
        <short>Torrent is paused and has NOT finished downloading.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsQueuedUp">
        <short>Queuing is enabled and torrent is queued for upload.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsQueuedDl">
        <short>Queuing is enabled and torrent is queued for download.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsUploading">
        <short>Torrent is being seeded and data is being transfered.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsStalledUp">
        <short>Torrent is being seeded, but no connection were made.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsStalledDl">
        <short>Torrent is being downloaded, but no connection were made.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsCheckingUp">
        <short>Torrent has finished downloading and is being checked; this status also applies to preallocation (if enabled) and checking resume data on qBt startup.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsCheckingDl">
        <short>Same as checkingUP, but torrent has NOT finished downloading.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsDownloading">
        <short>Torrent is being downloaded and data is being transfered.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsMetaDl">
        <short>Torrent has just started downloading and is fetching metadata.</short>
      </element>
      <!-- enumeration value Visibility: default -->
      <element name="TqBTorrentState.qtsUnknown">
        <short>Catch all state in case something changes in the API.</short>
      </element>
      <!-- object Visibility: default -->
      <element name="TqBTorrent">
        <short>Container class for a single torrent.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Hash">
        <short>Torrent hash.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Name">
        <short>Torrent name.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Size">
        <short>Total size (bytes) of files selected for download.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Progress">
        <short>Torrent progress (percentage/100).</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.DlSpeed">
        <short>Torrent download speed (bytes/s).</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.UpSpeed">
        <short>Torrent upload speed (bytes/s).</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Priority">
        <short>Torrent priority. Returns -1 if queuing is disabled or torrent is in seed mode.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.NumSeeds">
        <short>Number of seeds connected to.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.NumComplete">
        <short>Number of seeds in the swarm.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.NumLeechs">
        <short>Number of leechers connected to.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.NumIncomplete">
        <short>Number of leechers in the swarm.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Ratio">
        <short>Torrent share ratio. Max ratio value: 9999.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Eta">
        <short>Torrent ETA (seconds).</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.State">
        <short>Torrent state.</short>
        <descr/>
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrentState">TqBTorrentState</link>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.SeqDl">
        <short>True if sequential download is enabled.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.FirstLastPiecePrioritized">
        <short>True if first last piece are prioritized.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Category">
        <short>Category of the torrent.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.SuperSeeding">
        <short>True if super seeding is enabled.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.ForceStart">
        <short>True if force start is enabled for this torrent.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.SavePath">
        <short>The folder where the torrent is being downloaded.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.AddedOn">
        <short>Date of the torrent's addition.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.CompletionOn">
        <short>Date of the torrent's completion.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Properties">
        <short>Torrent's properties.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Trackers">
        <short>Torrent's trackers.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.WebSeeds">
        <short>Torrent's web seeds.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrent.Files">
        <short>Torrent's files.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TqBTorrent.Create">
        <short>Creates the torrent object.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Create.aJSON">
        <short>A JSON <var>String</var> contaning a JSON <var>Object</var> with a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Create.aJSONData">
        <short>A JSON <var>Data</var> contaning a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Create.aJSONObj">
        <short>A JSON <var>Object</var> contaning a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Create.aStream">
        <short>A <var>TStream</var> contaning a JSON <var>Object</var> with a torrent.</short>
      </element>
      <!-- destructor Visibility: public -->
      <element name="TqBTorrent.Destroy">
        <short>Destroys the torrent object.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrent.Load">
        <short>Loads the contents of a torrent.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Load.aJSON">
        <short>A JSON <var>String</var> contaning a JSON <var>Object</var> with a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Load.aJSONData">
        <short>A JSON <var>Data</var> contaning a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Load.aJSONObj">
        <short>A JSON <var>Object</var> contaning a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrent.Load.aStream">
        <short>A <var>TStream</var> contaning a JSON <var>Object</var> with a torrent.</short>
      </element>
      <!-- object Visibility: default -->
      <element name="TqBTorrents">
        <short>Container class for a list of <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrent">TqBTorrent</link>.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrents.Items">
        <short>Property to access the list of <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrent">TqBTorrent</link> by index.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: public -->
      <element name="TqBTorrents.Items.Index">
        <short>Numerical index of the <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrent">TqBTorrent</link>.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrents.Hashes">
        <short>Property to access the list of <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrent">TqBTorrent</link> by hash.</short>
        <descr/>
        <seealso/>
      </element>
      <!-- argument Visibility: public -->
      <element name="TqBTorrents.Hashes.Hash">
        <short>Hash of the <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrent">TqBTorrent</link>.</short>
      </element>

      <!-- function Visibility: public -->
      <element name="TqBTorrents.GetEnumerator">
        <short>Returns the enumerator class for this object.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: public -->
      <element name="TqBTorrents.GetEnumerator.Result">
        <short>The retruned enumerator class for Torrents.</short>
      </element>
      <!-- function Visibility: public -->
      <element name="TqBTorrents.HasTorrentHASH">
        <short>Returns <var>True</var> if the hash identifies one of the contained torrents.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: public -->
      <element name="TqBTorrents.HasTorrentHASH.Result">
        <short>True if the torrent identified by the Hash is present.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.HasTorrentHASH.aHASH">
        <short>The Hash to investigate.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.LoadTorrents">
        <short>Clears the torrent list and loads new torrents.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.LoadTorrents.aJSON">
        <short>A JSON <var>String</var> containing an <var>Array</var> of torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.LoadTorrents.aJSONData">
        <short>A JSON <var>Data</var> containing the torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.LoadTorrents.aJSONArray">
        <short>A JSON <var>Array</var> containing the torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.LoadTorrents.aStream">
        <short>A <var>TStream</var> containing an <var>Array</var> of torrents.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.UpdateTorrents">
        <short>Updates the contained torrents with new values.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrents.aJSON">
        <short>A JSON <var>String</var> containing an <var>Array</var> of torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrents.aJSONData">
        <short>A JSON <var>Data</var> containing the torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrents.aJSONArray">
        <short>A JSON <var>Array</var> containing the torrents.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrents.aStream">
        <short>A <var>TStream</var> containing an <var>Array</var> of torrents.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.UpdateTorrent">
        <short>Update a single torrent identified by Hash.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrent.aHash">
        <short>The Hash of the torrent to be updated.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrent.aJSON">
        <short>A JSON <var>String</var> containing a JSON <var>Object</var> of a torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrent.aJSONData">
        <short>A JSON <var>Data</var> containing the torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrent.aJSONObj">
        <short>A JSON <var>Object</var> containing the torrent.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrent.aStream">
        <short>A <var>TStream</var> containing a JSON <var>Object</var> of a torrent.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.DeleteTorrent">
        <short>Deletes a torrent by Hash.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.DeleteTorrent.aHash">
        <short>The Hash of the torrent to be deleted.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.UpdateTorrentProperties">
        <short>Updates the properties of a torrent identified by a Hash.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentProperties.aHash">
        <short>The Hash of the torrent to be updated.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentProperties.aJSON">
        <short>A JSON <var>String</var> containing a JSON <var>Object</var> of a torrent's properties.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentProperties.aJSONData">
        <short>A JSON <var>Data</var> containing the torrent's properties.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentProperties.aJSONObj">
        <short>A JSON <var>Object</var> containing the torrent's properties.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentProperties.aStream">
        <short>A <var>TStream</var> containing a JSON <var>Object</var> of a torrent's properties.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.UpdateTorrentTrackers">
        <short>Updates the trackers of a torrent identified by a Hash.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentTrackers.aHash">
        <short>The Hash of the torrent to be updated.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentTrackers.aJSON">
        <short>A JSON <var>String</var> containing a JSON <var>Array</var> of a torrent's trackers.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentTrackers.aJSONData">
        <short>A JSON <var>Data</var> containing the torrent's trackers.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentTrackers.aJSONArray">
        <short>A JSON <var>Array</var> containing the torrent's trackers.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentTrackers.aStream">
        <short>A <var>TStream</var> containing a JSON <var>Array</var> of a torrent's trackers.</short>
      </element>
      <!-- procedure Visibility: public -->
      <element name="TqBTorrents.UpdateTorrentFiles">
        <short>Updates the trackers of a torrent identified by a Hash.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentFiles.aHash">
        <short>The Hash of the torrent to be updated.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentFiles.aJSON">
        <short>A JSON <var>String</var> containing a JSON <var>Array</var> of a torrent's files.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentFiles.aJSONData">
        <short>A JSON <var>Data</var> containing the torrent's files.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentFiles.aJSONArray">
        <short>A JSON <var>Array</var> containing the torrent's files.</short>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrents.UpdateTorrentFiles.aStream">
        <short>A <var>TStream</var> containing a JSON <var>Array</var> of a torrent's files.</short>
      </element>

      <!-- class Visibility: default -->
      <element name="TqBTorrentsEnumerator">
        <short>Implements the enumerator for Torrents.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- constructor Visibility: public -->
      <element name="TqBTorrentsEnumerator.Create">
        <short>Creates the enumerator object.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBTorrentsEnumerator.Create.ATorrents">
        <short>The object containing the Torrent list.</short>
      </element>
      <!-- function Visibility: public -->
      <element name="TqBTorrentsEnumerator.GetCurrent">
        <short>Returns the current Torrent in the enumerator.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: public -->
      <element name="TqBTorrentsEnumerator.GetCurrent.Result">
        <short>The returned current Torrent.</short>
      </element>
      <!-- function Visibility: public -->
      <element name="TqBTorrentsEnumerator.MoveNext">
        <short>Tries to move to the next Torrent, returning <var>False</var> if end reached.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- function result Visibility: public -->
      <element name="TqBTorrentsEnumerator.MoveNext.Result">
        <short>Returns <var>True</var> if moved to next, <var>False</var> if reached end of list.</short>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBTorrentsEnumerator.Current">
        <short>Property containing the current Torrent on the enumerator.</short>
        <descr/>
        <seealso/>
      </element>

      <!-- function Visibility: default -->
      <element name="StrToqBTorrentState">
        <short>Translates from <var>String</var> to <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrentState">TqBTorrentState</link>.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="StrToqBTorrentState.aState">
        <short>The <var>String</var> to be translated.</short>
      </element>
      <!-- function result Visibility: default -->
      <element name="StrToqBTorrentState.Result">
        <short>The translated <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrentState">TqBTorrentState</link>.</short>
      </element>
      <!-- function Visibility: default -->
      <element name="qBTorrentStateToStr">
        <short>Translates from <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrentState">TqBTorrentState</link> to <var>String</var>.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <!-- argument Visibility: default -->
      <element name="qBTorrentStateToStr.aState">
        <short>The <link id="#lazqBitTorrentWebUI.qBTorrents.TqBTorrentState">TqBTorrentState</link> to be translated.</short>
      </element>
      <!-- function result Visibility: default -->
      <element name="qBTorrentStateToStr.Result">
        <short>The translated <var>String</var>.</short>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
