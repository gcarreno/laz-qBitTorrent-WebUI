<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="lazqBitTorrentWebUI">
    <!--
         ====================================================================
         qBitTorrentWebUI
         ====================================================================
    -->
    <module name="qBitTorrentWebUI">
      <short>Component to access the WebUI of qBitTorrent.</short>
      <descr>
        <p>In this unit you can find an implementation of component to access the WebUI of qBitTorrent.</p>
      </descr>
      <!-- unresolved type reference Visibility: default -->
      <element name="Classes">
        <short />
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="SysUtils">
        <short />
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="HTTPSend">
        <short />
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- unresolved type reference Visibility: default -->
      <element name="qBTorrents">
        <short />
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- object Visibility: default -->
      <element name="TqBitTorrentWebUI">
        <short>Implements an interface to access the WebUI of qBitTorrent.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.IsLogged">
        <short>Contains state of Login.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.LoginCookie">
        <short>Cookie value from the Login.</short>
        <descr />
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.Active">TqBitTorrentWebUI.Active</link>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.Torrents">
        <short>Contains the list of torrents</short>
        <descr />
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.GetTorrents">TqBitTorrentWebUI.GetTorrents</link>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.APIVersion">
        <short>Contains the version of the API.</short>
        <descr />
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.Active">TqBitTorrentWebUI.Active</link>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.MinAPIVersion">
        <short>Contains the minimum version the API supports.</short>
        <descr />
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.Active">TqBitTorrentWebUI.Active</link>
        </seealso>
      </element>
      <!-- property Visibility: public -->
      <element name="TqBitTorrentWebUI.qBitTorrentVersion">
        <short>Contains the version of the qBitTorrent client.</short>
        <descr />
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.Active">TqBitTorrentWebUI.Active</link>
        </seealso>
      </element>
      <!-- property Visibility: published -->
      <element name="TqBitTorrentWebUI.Active">
        <short>If the component is Active or not.</short>
        <descr>
          <p>Changing this property triggers a series of internal events.</p>
          <p>If you set it to <var>True</var> the component will Login and:</p>
          <ul>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.IsLogged">IsLogged</link> property <var>True</var>.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.LoginCookie">LoginCookie</link> property to what the API returns.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.APIVersion">APIVersion</link> property to what the API returns.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.MinAPIVersion">MinAPIVersion</link> property to what the API returns.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.qBitTorrentVersion">qBitTorrentVersion</link> property to what the API returns.</li>
          </ul>
          <p>If you set it to <var>False</var> the component will Logout and:</p>
          <ul>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.IsLogged">IsLogged</link> property to <var>False</var>.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.LoginCookie">LoginCookie</link> property to empty.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.APIVersion">APIVersion</link> property to -1.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.MinAPIVersion">MinAPIVersion</link> property to -1.</li>
            <li>Set the <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.qBitTorrentVersion">qBitTorrentVersion</link> property to empty.</li>
          </ul>
        </descr>
        <errors />
        <seealso>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.IsLogged">TqBitTorrentWebUI.IsLogged</link>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.LoginCookie">TqBitTorrentWebUI.LoginCookie</link>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.APIVersion">TqBitTorrentWebUI.APIVersion</link>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.MinAPIVersion">TqBitTorrentWebUI.MinAPIVersion</link>
          <link id="#lazqBitTorrentWebUI.qBitTorrentWebUI.TqBitTorrentWebUI.qBitTorrentVersion">TqBitTorrentWebUI.qBitTorrentVersion</link>
        </seealso>
      </element>
      <!-- property Visibility: published -->
      <element name="TqBitTorrentWebUI.UserName">
        <short>Username to login to the qBittorrent client.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- property Visibility: published -->
      <element name="TqBitTorrentWebUI.Password">
        <short>Password to login to the qBittorrent client.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- property Visibility: published -->
      <element name="TqBitTorrentWebUI.Host">
        <short>Host/Address  for the qBittorrent client.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- property Visibility: published -->
      <element name="TqBitTorrentWebUI.Port">
        <short>Port  for the qBittorrent client.</short>
        <descr />
        <errors />
        <seealso />
      </element>
      <!-- function Visibility: public -->
      <element name="TqBitTorrentWebUI.ExecShutdown">
        <short>Executes the command to shutdown(close) the qBitTorrent client.</short>
        <descr />
        <errors>Will throw an exception if not successfull.</errors>
        <example file="examples/execshutdown_example.pas" />
        <seealso />
      </element>
      <!-- function result Visibility: default -->
      <element name="TqBitTorrentWebUI.ExecShutdown.Result">
        <short>True if shutdown succeded.</short>
      </element>
      <!-- function Visibility: public -->
      <element name="TqBitTorrentWebUI.GetTorrents">
        <short>Queries the API for torrents.</short>
        <descr />
        <errors>Will throw an exception if not successfull.</errors>
        <example file="examples/gettorrents_example.pas" />
        <seealso />
      </element>
      <!-- function result Visibility: default -->
      <element name="TqBitTorrentWebUI.GetTorrents.Result">
        <short>True if query of torrents succeded.</short>
      </element>
      <!-- function Visibility: public -->
      <element name="TqBitTorrentWebUI.GetTorrentsFiltered">
        <short>Queries the API for torrents applying a filter.</short>
        <descr />
        <errors>Will throw an exception if not successfull.</errors>
        <example file="examples/gettorrents_example.pas" />
        <seealso />
      </element>
      <!-- argument Visibility: default -->
      <element name="TqBitTorrentWebUI.GetTorrentsFiltered.aFilter">
        <short>The filter to be applied.</short>
      </element>
      <!-- function result Visibility: default -->
      <element name="TqBitTorrentWebUI.GetTorrentsFiltered.Result">
        <short>True if query of torrents succeded.</short>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
